Microservice Architecture:

    ☐ Docker + Dockercon Zusammenfassung
    ☐ Testdaten in System bekommen

    ☐ DGM Ausgabe über WCS/WFS
    ☐ ID's einheitlich gestalten
    ☐ neuer Service mit Coverage Berechnungen (DE-9IM, Walthers Masterarbeit)
    ☐ Automation der Überführung nach PostGIS und GraphDB 
    ☐ Linkmodell für Daten eines TerrainTwinObject
    ☐ Linkmodell zwischen den Persistenzdiensten
    ☐ Ontologie TerrainTwin
    ☐ GitLab Projekte vereinigen
    ☐ Dokumentation erweitern 
    ☐ Docker-Stack (Postgres DB, GraphDB, MinIO Object Storage) + Datacat in Microservice-Architektur einbinden

    ☐ 3D-Objekte verwenden
    ☐ Paper Idee


    Postgres-Import-Service:
        ☐ EPSG Codes in Tabellendefinition und Insert Befehlen variabel gestalten
        ☐ REST Schnittstelle für Postgres hinzufügen
        ☐ allgemeineren Namen für Service find
        ☐ direkter Import DGM für Rückschreiben durch LandplanOS?

    MinIO-Upload-Service:
        ☐ Validierung Daten bei MinIO Upload
    
    GraphDB-Import-Service:
        ☐ Repositories über REST/automatisch neu erstellen (FreeSailRepository)
        ☐ Elemente Updaten/Löschen

    Berechnungen:
        ☐ Abfrage welche Objekte liegen übereinander (DE-9IM)
            ☐ Topologie explizit in GraphDB
            ☐ Mögliche Abfragen zeigen
        ☐ Umring von DGM als 3D-Polygon, 2D-Polygon
        ☐ GDAL Docker 
        ☐ Massenberechnungen, Differenz zw. 2 DGM

    IfcTerrain als Webservice:
        ☐ Dockerfile mit Microsoft Image
        ☐ REST Schnittstelle zur Übergabe einer JSON an IfcTerrainCommand 
        