version: '3.8'
services:
    configserver:
        container_name: configserver
        hostname: configserver
        build:
            context: ./ConfigServer
        image: schi11er/tt_configserver:latest
        restart: unless-stopped
        ports:
            - 8888:8888
        networks:
            - terraintwin_microservices
        volumes:
            - ./volumes/configs:/var/lib/centralProperties
        healthcheck:
            test: wget --spider http://localhost:8888/actuator/health || exit 1
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s

    eurekaserver:
        container_name: eurekaserver
        build:
            context: ./EurekaServer
        image: schi11er/tt_eurekaserver:latest
        restart: unless-stopped
        ports:
            - 9091:9091
        networks:
            - terraintwin_microservices
        depends_on: 
            - configserver
        healthcheck:
            test: wget --spider http://localhost:9091/actuator/health || exit 1
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s

    minio-upload-service:
        container_name: minio-upload-service
        build:
            context: ./MinIOUploadService
        image: schi11er/tt_minio-upload-service:latest
        restart: unless-stopped
        ports:
            - 7204:7204
        depends_on: 
            - configserver
            - eurekaserver
        networks:
            - terraintwin_microservices
        healthcheck:
            test: wget --spider http://localhost:7204/actuator/health || exit 1
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s
        environment:
            - domain.url=${DOMAIN_URL}
            - minio.url=${MINIO_URL}
            - minio.port=${MINIO_PORT}
            - minio.access_key=${MINIO_ACCESS_KEY}
            - minio.secret_key=${MINIO_SECRET_KEY}

            
    graphdb-import-service:
        container_name: graphdb-import-service
        build:
            context: ./GraphDBImportService
        image: schi11er/tt_graphdb-import-service:latest
        restart: unless-stopped
        ports:
            - 7201:7201
        networks:
            - terraintwin_microservices
        depends_on:
            - configserver
            - eurekaserver
        # healthcheck:
        #     test: wget --spider http://localhost:7201/actuator/health || exit 1
        #     interval: 30s
        #     timeout: 5s
        #     retries: 5
        #     start_period: 20s
        environment:
            - domain.url=${DOMAIN_URL}
            - minio.url=${MINIO_URL}
            - minio.port=${MINIO_PORT}
            - minio.access_key=${MINIO_ACCESS_KEY}
            - minio.secret_key=${MINIO_SECRET_KEY}
            - graphdb.url=${GRAPHDB_URL}
            - graphdb.username=${GRAPHDB_USERNAME}
            - graphdb.password=${GRAPHDB_PASSWORD}

    postgres-import-service:
        container_name: postgres-import-service
        build:
            context: ./PostgresImportService
        image: schi11er/tt_postgres-import-service:latest
        restart: unless-stopped
        ports:
            - 7203:7203
        networks:
            - terraintwin_microservices
        depends_on:
            - configserver
            - eurekaserver
        healthcheck:
            test: wget --spider http://localhost:7203/actuator/health || exit 1
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 20s
        environment:
            - domain.url=${DOMAIN_URL}
            - minio.url=${MINIO_URL}
            - minio.port=${MINIO_PORT}
            - minio.access_key=${MINIO_ACCESS_KEY}
            - minio.secret_key=${MINIO_SECRET_KEY}
            - postgres.url=${POSTGRES_URL}
            - postgres.database.name=${POSTGRES_DATABASE}
            - postgres.database.username=${POSTGRES_DATABASE_USERNAME}
            - postgres.database.password=${POSTGRES_DATABASE_PASSWORD}

    csv2rdf-converter-service:
        container_name: csv2rdf-converter-service
        build:
            context: ./Csv2RdfConverterService
        image: schi11er/tt_csv2rdf-converter-service:latest
        restart: unless-stopped
        ports:
            - 7202:7202
        networks:
            - terraintwin_microservices
        depends_on:
            - configserver
            - eurekaserver
        healthcheck:
            test: wget --spider http://localhost:7202/actuator/health || exit 1
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s
        environment:
            - domain.url=${DOMAIN_URL}
            - minio.url=${MINIO_URL}
            - minio.port=${MINIO_PORT}
            - minio.access_key=${MINIO_ACCESS_KEY}
            - minio.secret_key=${MINIO_SECRET_KEY}
            
    gateway-service:
        container_name: gateway-service
        build:
            context: ./GatewayService
        image: schi11er/tt_gateway-service:latest
        restart: unless-stopped
        ports:
            - 8084:8084
        networks:
            - terraintwin_microservices
        depends_on:
            - configserver
            - eurekaserver
        healthcheck:
            test: wget --spider http://localhost:8084/actuator/health || exit 1
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s

#     keycloak:
#         image: jboss/keycloak:10.0.2
#         container_name: keycloak_security
#         restart: on-failure
#         environment:
#             KEYCLOAK_USER: admin
#             KEYCLOAK_PASSWORD: admin
#             DB_VENDOR: POSTGRES
#             DB_ADDR: postgres
#             DB_DATABASE: keycloak
#             DB_USER: keycloak
#             DB_SCHEMA: public
#             DB_PASSWORD: password
#         ports:
#             - 8090:8090
#         volumes:
#             - ./volumes/keycloak-server/realm-export.json:/tmp/keycloak/config/realm-export.json
#         command:
#             - "-b"
#             - "0.0.0.0"
#             - "-Djboss.socket.binding.port-offset=10"
#         depends_on: 
#             - postgres

#     postgres:
#         image: postgres
#         volumes:
#             - postgres_data:/var/lib/postgresql/data
#         restart: always
#         environment:
#             POSTGRES_DB: keycloak
#             POSTGRES_USER: keycloak
#             POSTGRES_PASSWORD: password

# volumes:
#     postgres_data:
#         name: keycloak_postgres_data
#         driver: local

networks:
    terraintwin_microservices:
        driver: bridge